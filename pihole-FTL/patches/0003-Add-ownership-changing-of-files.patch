From 10107560c4ac7c98f5cbdcbe434875ee829ef652 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=98=D0=BB=D1=8C=D1=8F=20=D0=A4=D0=B5=D0=B4=D0=B8=D0=BD?=
 <fedin-ilja2010@ya.ru>
Date: Tue, 4 Sep 2018 19:57:57 +0400
Subject: [PATCH 3/3] Add ownership changing of files

---
 dnsmasq/dnsmasq.c   |  1 +
 dnsmasq_interface.c | 37 +++++++++++++++++++++++++++++++++++++
 dnsmasq_interface.h |  1 +
 3 files changed, 39 insertions(+)

diff --git a/dnsmasq/dnsmasq.c b/dnsmasq/dnsmasq.c
index 54a47da..4f9fff5 100644
--- a/dnsmasq/dnsmasq.c
+++ b/dnsmasq/dnsmasq.c
@@ -571,6 +571,7 @@ int main_dnsmasq (int argc, char **argv)
     }
 
     FTL_fork_and_bind_sockets();
+    FTL_change_ownership_of_files(ent_pw);
 
    log_err = log_start(ent_pw, err_pipe[1]);
 
diff --git a/dnsmasq_interface.c b/dnsmasq_interface.c
index 0dd655d..9690edb 100644
--- a/dnsmasq_interface.c
+++ b/dnsmasq_interface.c
@@ -797,6 +797,43 @@ void FTL_fork_and_bind_sockets(void)
 	}
 }
 
+// Change the ownership of files to the user we will be running as.
+void FTL_change_ownership_of_files(struct passwd *ent_pw)
+{
+	if(getuid() == 0 && ent_pw && ent_pw->pw_uid != 0)
+	{
+		if(chown(FTLfiles.log, ent_pw->pw_uid, ent_pw->pw_gid) == -1)
+		{
+			logg("WARNING: Unable to change ownership of log file.");
+			logg("         Continuing anyway...");
+		}
+
+		if(chown(FTLfiles.pid, ent_pw->pw_uid, ent_pw->pw_gid) == -1)
+		{
+			logg("WARNING: Unable to change ownership of PID file.");
+			logg("         Continuing anyway...");
+		}
+
+		if(chown(FTLfiles.port, ent_pw->pw_uid, ent_pw->pw_gid) == -1)
+		{
+			logg("WARNING: Unable to change ownership of port file.");
+			logg("         Continuing anyway...");
+		}
+
+		if(database && chown(FTLfiles.db, ent_pw->pw_uid, ent_pw->pw_gid) == -1)
+		{
+			logg("WARNING: Unable to change ownership of DB file.");
+			logg("         Continuing anyway...");
+		}
+
+		if(chown(FTLfiles.socketfile, ent_pw->pw_uid, ent_pw->pw_gid) == -1)
+		{
+			logg("WARNING: Unable to change ownership of Unix socket.");
+			logg("         Continuing anyway...");
+		}
+	}
+}
+
 // int cache_inserted, cache_live_freed are defined in dnsmasq/cache.c
 extern int cache_inserted, cache_live_freed;
 void getCacheInformation(int *sock)
diff --git a/dnsmasq_interface.h b/dnsmasq_interface.h
index 7872be1..301682b 100644
--- a/dnsmasq_interface.h
+++ b/dnsmasq_interface.h
@@ -17,6 +17,7 @@ void FTL_cache(unsigned int flags, char *name, struct all_addr *addr, char * arg
 void FTL_dnssec(int status, int id);
 void FTL_dnsmasq_reload(void);
 void FTL_fork_and_bind_sockets(void);
+void FTL_change_ownership_of_files(struct passwd *ent_pw);
 
 void FTL_forwarding_failed(struct server *server);
 int FTL_listsfile(char* filename, unsigned int index, FILE *f, int cache_size, struct crec **rhash, int hashsz);
-- 
2.18.0

